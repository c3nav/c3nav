# Generated by Django 5.0.8 on 2024-12-25 15:49

import c3nav.routing.schemas
import django.core.serializers.json
import django.db.models.deletion
import django_pydantic_field.compat.django
import django_pydantic_field.fields
import types
import typing
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mapdata', '0126_loadgroup'),
    ]

    operations = [
        migrations.AlterField(
            model_name='beaconmeasurement',
            name='data',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default={'ibeacon': [], 'wifi': []}, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=c3nav.routing.schemas.BeaconMeasurementDataSchema, verbose_name='Measurement list'),
        ),
        migrations.AlterField(
            model_name='dataoverlay',
            name='default_geomtype',
            field=models.CharField(blank=True, choices=[('polygon', 'Polygon'), ('linestring', 'Line string'), ('multipoint', 'Multipoint'), ('point', 'Point')], max_length=255, null=True, verbose_name='default geometry type'),
        ),
        migrations.AlterField(
            model_name='dataoverlayfeature',
            name='extra_data',
            field=django_pydantic_field.fields.PydanticSchemaField(blank=True, config=None, default=None, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True, schema=django_pydantic_field.compat.django.GenericContainer(typing.Union, (django_pydantic_field.compat.django.GenericContainer(dict, (str, str | int | bool)), types.NoneType)), verbose_name='extra data (JSON object)'),
        ),
        migrations.AlterField(
            model_name='dataoverlayfeature',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapdata.level', verbose_name='level'),
        ),
        migrations.AlterField(
            model_name='locationgroup',
            name='can_report_mistake',
            field=models.CharField(choices=[('allow', 'allow'), ('reject', 'reject for all locations with this group')], default='allow', max_length=16, verbose_name='report mistakes'),
        ),
    ]
