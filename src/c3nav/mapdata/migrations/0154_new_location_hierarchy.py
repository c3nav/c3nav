# Generated by Django 5.1.5 on 2025-04-08 16:49
import django.db.models.functions.text
from django.db import migrations, models

import c3nav.mapdata.fields
import c3nav.mapdata.models.locations


class Migration(migrations.Migration):

    dependencies = [
        ('mapdata', '0153_more_location_caching_and_dynamiclocation'),
    ]

    operations = [
        migrations.AlterField(
            model_name='mapupdatejob',
            name='job_type',
            field=models.CharField(choices=(('mapdata.recalculate_specificlocation_order', 'SpecificLocation order'), ('mapdata.recalculate_specificlocation_cached_from_parents', 'SpecificLocation cached from parents'), ('mapdata.recalculate_specificlocation_static_targets', 'SpecificLocation static targets'), ('mapdata.recalculate_specificlocation_dynamic_targets', 'SpecificLocation dynamic targets'), ('mapdata.recalculate_specificlocation_target_subtitles', 'SpecificLocation target subtitles'), ('mapdata.recalculate_level_bounds', 'level bounds'), ('mapdata.recalculate_space_effective_geometries', 'Space effective geometries'), ('mapdata.recalculate_space_simplified_geometries', 'Space simplified geometries'), ('mapdata.recalculate_area_effective_geometries', 'Area effective geometries'), ('mapdata.recalculate_space_points', 'Space points'), ('mapdata.recalculate_area_points', 'Area points'), ('mapdata.recalculate_space_bounds', 'Space bounds'), ('mapdata.recalculate_area_bounds', 'Area bounds'), ('mapdata.recalculate_specificlocation_geometries', 'Specific location geometries'), ('mapdata.recalculate_specificlocation_bounds', 'Specific location bounds'), ('mapdata.recalculate_specificlocation_points', 'Specific location points'), ('mapdata.recalculate_specificlocation_final', 'SpecificLocation finalize'), ('mapdata.recalculate_geometries', 'geometries'), ('routing.rebuild_router', 'router'), ('routing.rebuild_locator', 'locator')), db_index=True, max_length=64),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='can_report_missing',
            field=models.CharField(choices=[('dont_offer', "don't offer"), ('reject', 'offer in first step, then reject'), ('single', 'offer in first step, exclusive choice'), ('multiple', 'offer if nothing in the first step matches, multiple choice')], default='dont_offer', max_length=16, verbose_name='report missing location'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='can_report_mistake',
            field=models.CharField(choices=[('allow', 'allow'), ('reject', 'reject for all locations and sublocations')], default='allow', max_length=16, verbose_name='report mistakes'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='color',
            field=models.CharField(blank=True, max_length=32, null=True, verbose_name='background color'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='description',
            field=c3nav.mapdata.fields.I18nField(blank=True, fallback_any=True, fallback_value='', help_text='to aid with selection in the report form', plural_name='descriptions', verbose_name='description'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='external_url_label',
            field=c3nav.mapdata.fields.I18nField(blank=True, fallback_any=True, fallback_value='', plural_name='external_url_labels', verbose_name='external URL label'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='hierarchy',
            field=models.IntegerField(db_index=True, default=0, verbose_name='hierarchy'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='hub_import_type',
            field=models.CharField(blank=True, help_text='import hub locations of this type as children of this location', max_length=100, null=True, unique=True, verbose_name='hub import type'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='in_legend',
            field=models.BooleanField(default=False, verbose_name='show in legend (if color set)'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='load_group_contribute',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapdata.loadgroup', verbose_name='contribute to load group'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='priority',
            field=models.IntegerField(db_index=True, default=0),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='report_help_text',
            field=c3nav.mapdata.fields.I18nField(blank=True, fallback_any=True, fallback_value='', help_text='to explain the report form or rejection', plural_name='report_help_texts', verbose_name='report help text'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='parents',
            field=models.ManyToManyField(related_name='children', to='mapdata.specificlocation'),
        ),
        migrations.AddField(
            model_name='report',
            name='created_parents',
            field=models.ManyToManyField(blank=True, help_text='select all that apply, if any', related_name='+', to='mapdata.specificlocation', verbose_name='location type'),
        ),
        migrations.AddField(
            model_name='themelocationgroupbackgroundcolor',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='theme_colors', to='mapdata.specificlocation'),
        ),
        migrations.AlterField(
            model_name='themelocationgroupbackgroundcolor',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='mapdata.theme'),
        ),
    ]
