# Generated by Django 5.1.5 on 2025-04-01 16:58

import c3nav.api.schema
import c3nav.mapdata.permissions
import django.core.serializers.json
import django_pydantic_field.compat.django
import django_pydantic_field.fields
import types
import typing
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mapdata', '0150_level_effective_bounds'),
    ]

    operations = [
        migrations.AddField(
            model_name='area',
            name='cached_effective_geometries',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(list, (django_pydantic_field.compat.django.GenericContainer(c3nav.mapdata.permissions.MapPermissionTaggedItem, (c3nav.api.schema.PolygonSchema | c3nav.api.schema.MultiPolygonSchema,)),))),
        ),
        migrations.AddField(
            model_name='space',
            name='cached_effective_geometries',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(list, (django_pydantic_field.compat.django.GenericContainer(c3nav.mapdata.permissions.MapPermissionTaggedItem, (c3nav.api.schema.PolygonSchema | c3nav.api.schema.MultiPolygonSchema,)),))),
        ),
        migrations.AddField(
            model_name='area',
            name='cached_bounds',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True, schema=django_pydantic_field.compat.django.GenericContainer(typing.Union, (c3nav.mapdata.models.geometry.base.CachedBounds, types.NoneType))),
        ),
        migrations.AddField(
            model_name='area',
            name='cached_points',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(list, (django_pydantic_field.compat.django.GenericContainer(c3nav.mapdata.permissions.MapPermissionTaggedItem, (django_pydantic_field.compat.django.GenericContainer(tuple, (float, float)),)),))),
        ),
        migrations.AddField(
            model_name='space',
            name='cached_bounds',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True, schema=django_pydantic_field.compat.django.GenericContainer(typing.Union, (c3nav.mapdata.models.geometry.base.CachedBounds, types.NoneType))),
        ),
        migrations.AddField(
            model_name='space',
            name='cached_points',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(list, (django_pydantic_field.compat.django.GenericContainer(c3nav.mapdata.permissions.MapPermissionTaggedItem, (django_pydantic_field.compat.django.GenericContainer(tuple, (float, float)),)),))),
        ),
        migrations.AlterField(
            model_name='mapupdatejob',
            name='job_type',
            field=models.CharField(choices=(('mapdata.recalculate_locationgroup_order', 'LocationGroup order'), ('mapdata.recalculate_specificlocation_order', 'SpecificLocation order'), ('mapdata.recalculate_specificlocation_cached_from_parents', 'SpecificLocation cached from parents'), ('mapdata.recalculate_space_effective_geometries', 'Space effective geometries'), ('mapdata.recalculate_area_effective_geometries', 'Area effective geometries'), ('mapdata.recalculate_space_points', 'Space points'), ('mapdata.recalculate_area_points', 'Area points'), ('mapdata.recalculate_space_bounds', 'Space bounds'), ('mapdata.recalculate_area_bounds', 'Area bounds'), ('mapdata.recalculate_geometries', 'geometries'), ('mapdata.recalculate_level_bounds', 'level bounds'), ('routing.rebuild_router', 'router'), ('routing.rebuild_locator', 'locator')), db_index=True, max_length=64),
        ),
    ]
