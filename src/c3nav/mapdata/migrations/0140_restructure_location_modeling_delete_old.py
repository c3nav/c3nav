# Generated by Django 5.1.5 on 2025-01-24 16:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mapdata', '0139_restructure_location_modeling_1'),
        ('control', '0022_alter_userpermissions_restructured_locations'),
    ]

    operations = [
        # we're done, so we can delete all the _old models
        migrations.DeleteModel(
            name='LocationGroup_Old',
        ),
        migrations.DeleteModel(
            name='Space_Old',
        ),

        # this is for sqlite, restore indexes
        migrations.AlterField(
            model_name='area',
            name='access_restriction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mapdata.accessrestriction', verbose_name='Access Restriction'),
        ),
        migrations.AlterField(
            model_name='area',
            name='space',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapdata.space', verbose_name='space'),
        ),
        migrations.AlterField(
            model_name='poi',
            name='access_restriction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mapdata.accessrestriction', verbose_name='Access Restriction'),
        ),
        migrations.AlterField(
            model_name='poi',
            name='space',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapdata.space', verbose_name='space'),
        ),
        migrations.AlterField(
            model_name='space',
            name='access_restriction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mapdata.accessrestriction', verbose_name='Access Restriction'),
        ),
        migrations.AlterField(
            model_name='space',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapdata.level', verbose_name='level'),
        ),
    ]
