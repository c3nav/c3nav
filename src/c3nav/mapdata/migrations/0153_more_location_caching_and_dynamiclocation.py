# Generated by Django 5.1.5 on 2025-04-07 18:49

import c3nav.mapdata.permissions
import django.core.serializers.json
import django_pydantic_field.compat.django
import django_pydantic_field.fields
from django.db import migrations, models


def make_dynamic_location_target_m2m(apps, model_name):
    DynamicLocationTarget = apps.get_model('mapdata', 'DynamicLocationTarget')
    DynamicLocationTarget.objects.filter(position_secret="").delete()
    for dynamic_location_target in DynamicLocationTarget.objects.prefetch_related("locations"):
        dynamic_location_target.location = dynamic_location_target.locations.get()
        dynamic_location_target.save()


def un_make_dynamic_location_m2m(apps, model_name):
    DynamicLocationTarget = apps.get_model('mapdata', 'DynamicLocationTarget')
    for dynamic_location_target in DynamicLocationTarget.objects.select_related("location"):
        dynamic_location_target.location.dynamiclocations.add(dynamic_location_target)



class Migration(migrations.Migration):

    dependencies = [
        ('mapdata', '0152_more_cached_location_geometries'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='dynamiclocation',
            options={'default_related_name': 'dynamic_location_targets', 'verbose_name': 'Dynamic location target', 'verbose_name_plural': 'Dynamic locations target'},
        ),
        migrations.RemoveField(
            model_name='dynamiclocation',
            name='access_restriction',
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='cached_all_position_secrets',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(list, (str,))),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='cached_all_static_targets',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(list, (django_pydantic_field.compat.django.GenericContainer(c3nav.mapdata.permissions.MapPermissionTaggedItem, (django_pydantic_field.compat.django.GenericContainer(tuple, (str, int)),)),))),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='cached_target_subtitles',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(list, (django_pydantic_field.compat.django.GenericContainer(c3nav.mapdata.permissions.MapPermissionTaggedItem, (django_pydantic_field.compat.django.GenericContainer(dict, (str, str)),)),))),
        ),
        migrations.AlterField(
            model_name='mapupdatejob',
            name='job_type',
            field=models.CharField(choices=(('mapdata.recalculate_locationgroup_order', 'LocationGroup order'), ('mapdata.recalculate_specificlocation_order', 'SpecificLocation order'), ('mapdata.recalculate_specificlocation_cached_from_parents', 'SpecificLocation cached from parents'), ('mapdata.recalculate_specificlocation_static_targets', 'SpecificLocation static targets'), ('mapdata.recalculate_specificlocation_dynamic_targets', 'SpecificLocation dynamic targets'), ('mapdata.recalculate_specificlocation_target_subtitles', 'SpecificLocation target subtitles'), ('mapdata.recalculate_level_bounds', 'level bounds'), ('mapdata.recalculate_space_effective_geometries', 'Space effective geometries'), ('mapdata.recalculate_space_simplified_geometries', 'Space simplified geometries'), ('mapdata.recalculate_area_effective_geometries', 'Area effective geometries'), ('mapdata.recalculate_space_points', 'Space points'), ('mapdata.recalculate_area_points', 'Area points'), ('mapdata.recalculate_space_bounds', 'Space bounds'), ('mapdata.recalculate_area_bounds', 'Area bounds'), ('mapdata.recalculate_specificlocation_geometries', 'Specific location geometries'), ('mapdata.recalculate_specificlocation_bounds', 'Specific location bounds'), ('mapdata.recalculate_specificlocation_points', 'Specific location points'), ('mapdata.recalculate_geometries', 'geometries'), ('routing.rebuild_router', 'router'), ('routing.rebuild_locator', 'locator')), db_index=True, max_length=64),
        ),
        migrations.RenameModel(
            old_name='DynamicLocation',
            new_name='DynamicLocationTarget',
        ),
        migrations.AddField(
            model_name='dynamiclocationtarget',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mapdata.specificlocation'),
        ),
        migrations.RunPython(make_dynamic_location_target_m2m, un_make_dynamic_location_m2m),
        migrations.RemoveField(
            model_name='specificlocation',
            name='dynamiclocations',
        ),
        migrations.AlterField(
            model_name='dynamiclocationtarget',
            name='position_secret',
            field=models.CharField(max_length=32, verbose_name='position secret'),
        ),
    ]
