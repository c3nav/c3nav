# Generated by Django 5.1.5 on 2025-03-25 13:23

import c3nav.mapdata.fields
import c3nav.mapdata.models.locations
import c3nav.mapdata.permissions
import django.core.serializers.json
import django.db.models.deletion
import django_pydantic_field.compat.django
import django_pydantic_field.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mapdata', '0148_mapupdatejob'),
    ]

    operations = [
        migrations.AddField(
            model_name='specificlocation',
            name='cached_describing_titles',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(list, (django_pydantic_field.compat.django.GenericContainer(c3nav.mapdata.permissions.MapPermissionTaggedItem, (django_pydantic_field.compat.django.GenericContainer(dict, (str, str)),)),))),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='cached_effective_colors',
            field=django_pydantic_field.fields.PydanticSchemaField(config=None, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, schema=django_pydantic_field.compat.django.GenericContainer(dict, (int, c3nav.mapdata.models.locations.FillAndBorderColor))),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='effective_external_url_label',
            field=c3nav.mapdata.fields.I18nField(editable=False, null=True, fallback_any=True, fallback_value='', plural_name='effective_external_url_labels', verbose_name='external URL label'),
        ),
        migrations.AddField(
            model_name='specificlocation',
            name='effective_label_settings',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='mapdata.labelsettings'),
        ),
        migrations.AlterField(
            model_name='mapupdatejob',
            name='job_type',
            field=models.CharField(choices=(('mapdata.recalculate_locationgroup_order', 'LocationGroup order'), ('mapdata.recalculate_specificlocation_order', 'SpecificLocation order'), ('mapdata.recalculate_specificlocation_cached_from_parents', 'SpecificLocation cached from parents'), ('mapdata.recalculate_geometries', 'geometries'), ('routing.rebuild_router', 'router'), ('routing.rebuild_locator', 'locator')), db_index=True, max_length=64),
        ),
    ]
